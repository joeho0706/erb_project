<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Users List</title>
    <link rel="stylesheet" href="../stylesheets/form_style.css" />
  </head>
  <body>
    <h1>Users List</h1>
    <button onclick="window.location.href='/users/view_user_add'">
      Add User
    </button>
    <button onclick="location.reload()">Update</button>
    <button onclick="loadData()">Import Users</button>
    <button onclick="exportData()">Export Users</button>
    <button onclick="deleteUsers()">Delete All</button>

    <table>
      <thead>
        <tr>
          <th>User Total : <%=users.length%></th>
        </tr>
        <tr>
          <th>Thumbnail</th>
          <th>ID</th>
          <th>Name</th>
          <th>Gender</th>
          <th>Email</th>
          <th>Date of Birth</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% users.forEach(user => { %>
        <tr>
          <td><img src="<%= user.avatar %>" alt="Avatar" width="50" /></td>
          <td><%= user._id %></td>
          <td><%= user.name.first %> <%= user.name.last %></td>
          <td><%= user.gender %></td>
          <td><%= user.email %></td>
          <td><%= new Date(user.dob).toLocaleDateString() %></td>
          <td>
            <button
              onclick="window.location.href='/users/view_user_details?id=<%= user._id %>'"
            >
              Details
            </button>
            <button
              onclick="window.location.href='/users/view_user_edit?id=<%= user._id %>'"
            >
              Edit
            </button>
            <button onclick="deleteUser('<%=user._id%>')">Delete</button>
          </td>
        </tr>
        <% }); %>
      </tbody>
    </table>

    <script>
      function importUsers() {
        // Implement import users functionality
        alert('Import Users feature is not implemented yet.');
      }

      function exportUsers() {
        // Implement export users functionality
        alert('Export Users feature is not implemented yet.');
      }

      function deleteUsers() {
        if (confirm('Are you sure you want to delete all users?')) {
          fetch(`users/user_delete_all`)
            .then((res) => {
              return res.json();
            })
            .then((data) => {
              alert(data.msg);
              location.reload();
            })
            .catch((error) => {
              console.error('Error deleting users:', error);
            });
        } else alert('Cancel delete.');
      }

      function deleteUser(_id) {
        if (confirm('Are you sure you want to delete this user?')) {
          fetch(`users/user_delete/${_id}`)
            .then((res) => {
              return res.json();
            })
            .then((data) => {
              alert(data.msg);
              location.reload();
            })
            .catch((error) => {
              console.error('Error deleting user:', error);
            });
        } else alert('Cancel delete.');
      }

      // Function to export the data as a CSV or JSON file
      async function exportData() {
        const data = <%- JSON.stringify(users) %>; // TODO data unsafety because of password

        try {
          // Create a new file picker dialog
          const fileHandle = await window.showSaveFilePicker({
            suggestedName: 'data',
            types: [
              {
                description: 'Comma-Separated Values',
                accept: { 'text/csv': ['.csv'] },
              },
              {
                description: 'JSON Files',
                accept: { 'application/json': ['.json'] },
              },
            ],
          });

          // Determine the file type based on the selected file extension
          const fileType = fileHandle.name.endsWith('.csv') ? 'csv' : 'json';

          // Prepare the file data based on the selected file type
          let fileData;
          if (fileType === 'csv') {
            fileData = data.map((row) => `${row.name},${row.age}`).join('\n'); //TODO not work yet due to json to csv
          } else {
            fileData = JSON.stringify(data, null, 2);
          }

          // Write the data to the selected file
          const fileStream = await fileHandle.createWritable();
          await fileStream.write(fileData);
          await fileStream.close();

          console.log(`File saved as ${fileHandle.name} successfully!`);
        } catch (err) {
          console.error('Error saving file:', err);
        }
      }

      // Function to load data from a CSV or JSON file
      async function loadData() {
        try {
          // Create a new file picker dialog
          const [fileHandle] = await window.showOpenFilePicker({
            types: [
              {
                description: 'Comma-Separated Values',
                accept: { 'text/csv': ['.csv'] },
              },
              {
                description: 'JSON Files',
                accept: { 'application/json': ['.json'] },
              },
            ],
          });

          // Read the file contents
          const file = await fileHandle.getFile();
          const fileData = await file.text();

          // Determine the file type based on the selected file extension
          const fileType = fileHandle.name.endsWith('.csv') ? 'csv' : 'json';

          // Parse the file data based on the file type
          let data;
          if (fileType === 'csv') {
            data = fileData.split('\n').map((row) => {
              const [name, age] = row.split(',');
              return { name, age: parseInt(age) };
            });
          } else {
            data = JSON.parse(fileData);
          }

          //TODO add importing mongodb process
          // import users to mongodb
          // const respone = await fetch('users/user_add',{
          //   method: 'POST',
          //   body: JSON.stringify(data)
          // });

          // // Save the document to MongoDB
          // await fetch('/upload', {
          //       method: 'POST',
          //       body: JSON.stringify(data)
          //     });

        } catch (err) {
          console.error('Error loading file:', err);
        }
      }
    </script>
  </body>
</html>
